// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è QuotaExceededError
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

function testLocalStorageQuotaHandling() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ QuotaExceededError...');
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ localStorage
  const originalData = {};
  for (let i = 0; i < localStorage.length; i++) {
    const key = localStorage.key(i);
    originalData[key] = localStorage.getItem(key);
  }
  
  try {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –∑–∞–ø–æ–ª–Ω–∏—Ç—å localStorage –¥–æ –ø—Ä–µ–¥–µ–ª–∞
    let counter = 0;
    while (counter < 1000) {
      const largeData = 'x'.repeat(10000); // 10KB —Å—Ç—Ä–æ–∫–∞
      localStorage.setItem(`test_${counter}`, largeData);
      counter++;
    }
    console.log('‚úÖ localStorage –∑–∞–ø–æ–ª–Ω–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
  } catch (error) {
    if (error.name === 'QuotaExceededError') {
      console.log('‚úÖ QuotaExceededError –ø–æ–π–º–∞–Ω–∞:', error.message);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
      try {
        const keys = Object.keys(localStorage);
        const testKeys = keys.filter(key => key.startsWith('test_'));
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${testKeys.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª—é—á–µ–π`);
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–æ–≤–∏–Ω—É
        testKeys.slice(0, Math.floor(testKeys.length / 2)).forEach(key => {
          localStorage.removeItem(key);
        });
        
        console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        
        // –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        localStorage.setItem('test_new', 'test data');
        console.log('‚úÖ –ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏');
        
      } catch (cleanupError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', cleanupError);
      }
    } else {
      console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
    }
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    localStorage.clear();
    Object.keys(originalData).forEach(key => {
      localStorage.setItem(key, originalData[key]);
    });
    console.log('üîÑ –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ localStorage –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testLocalStorageQuotaHandling();




