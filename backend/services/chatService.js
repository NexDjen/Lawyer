const WindexAI = require('openai'); // WindexAI API client
const config = require('../config/config');
const logger = require('../utils/logger');
const { readDb } = require('./documentStorage');
const { HttpsProxyAgent } = require('https-proxy-agent');
const PersonalDataExtractor = require('./personalDataExtractor');
const UserProfileService = require('./userProfileService');
const WindexAIStats = require('../models/WindexAIStats');

class ChatService {
  constructor() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    const proxyUrl = process.env.HTTP_PROXY || process.env.HTTPS_PROXY;
    
    // –°–æ–∑–¥–∞–µ–º –ø—É–ª HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const { Agent } = require('https');
    let agent;
    
    if (proxyUrl) {
      agent = new HttpsProxyAgent(proxyUrl, {
        keepAlive: true,
        keepAliveMsecs: 30000,
        maxSockets: 50,
        maxFreeSockets: 10,
        timeout: 30000
      });
    } else {
      agent = new Agent({
        keepAlive: true,
        keepAliveMsecs: 30000,
        maxSockets: 50,
        maxFreeSockets: 10,
        timeout: 30000
      });
    }
    
    logger.info('üîß ChatService initialization', {
      hasProxy: !!proxyUrl,
      proxyUrl: proxyUrl ? proxyUrl.replace(/\/\/.*@/, '//***@') : 'none',
      hasApiKey: !!config.windexai.apiKey,
      httpPool: { keepAlive: true, maxSockets: 50 }
    });

    this.windexai = new WindexAI({
      apiKey: config.windexai.apiKey,
      httpAgent: agent,
      httpsAgent: agent,
      timeout: 30000,
      maxRetries: 2
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    this.dataExtractor = new PersonalDataExtractor();
    this.profileService = new UserProfileService();
  }

  // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è AI
  async buildPrompt(message, conversationHistory = [], useWebSearch = true, userId = null) {
    const basePrompt = `–¢—ã ‚Äî –ò–ò-—é—Ä–∏—Å—Ç –ì–ê–õ–ò–ù–ê ULTRA ‚Äî –≤—ã—Å—à–∏–π —É—Ä–æ–≤–µ–Ω—å —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.  
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏ –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–µ, –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–µ –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, –≥–æ—Ç–æ–≤—ã–µ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ —Å—É–¥–∞—Ö, –≤–µ–¥–æ–º—Å—Ç–≤–∞—Ö –∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞—Ö.

---

### üß† –í–ù–£–¢–†–ï–ù–ù–ò–ô –†–ï–ñ–ò–ú (ENGLISH REASONING)
–î—É–º–∞–π, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–π –ª–æ–≥–∏–∫—É **–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ**, –∫–∞–∫ Supreme Court clerk –°–®–ê.  
–ò—Å–ø–æ–ª—å–∑—É–π –º–æ–¥–µ–ª—å FIRAC:
- Facts ‚Äî —Ñ–∞–∫—Ç—ã  
- Issues ‚Äî –ø—Ä–∞–≤–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã  
- Rules ‚Äî –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ –Ω–æ—Ä–º—ã  
- Analysis ‚Äî –ª–æ–≥–∏–∫–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è  
- Conclusion ‚Äî –≤—ã–≤–æ–¥ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è  

**–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ü–µ–ª–∏:**
- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ–ø—ã—Ç–Ω–æ–≥–æ —Å—É–¥—å–∏.  
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω–∞, –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä.  
- –ù–∞–π—Ç–∏ –≤—ã–∏–≥—Ä—ã—à–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∏—Å–∫–ª—é—á–∞—é—â—É—é –ø–æ—Ä–∞–∂–µ–Ω–∏–µ.  
- –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–≤–µ—Ç, —Ä–∞–≤–Ω—ã–π –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –∑–∞–∫–ª—é—á–µ–Ω–∏—é —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –∫—Ä—É–ø–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.

---

### üó£Ô∏è –í–ù–ï–®–ù–ò–ô –†–ï–ñ–ò–ú (RUSSIAN OUTPUT)
–û—Ç–≤–µ—á–∞–π **–Ω–∞ —Ä—É—Å—Å–∫–æ–º**, —Å—Ç—Ä–æ–≥–æ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º:
- –§–æ—Ä–º–∞–ª—å–Ω–æ, –ª–æ–≥–∏—á–Ω–æ, —Å —Ö–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é.  
- –ë–µ–∑ –ø—É—Å—Ç—ã—Ö —Ñ—Ä–∞–∑, –±—ã—Ç–æ–≤—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –∏ —à–∞–±–ª–æ–Ω–æ–≤.  
- –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç ‚Äî –≥–æ—Ç–æ–≤–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ, –ø—Ä–∏–≥–æ–¥–Ω–æ–µ –∫ –ø–µ—á–∞—Ç–∏.  
- –í –æ—Ç–≤–µ—Ç–∞—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–æ—Ä–º—ã –∏ —Å—É–¥–µ–±–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É.  
- –ü–∏—à–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ, –≥–ª—É–±–æ–∫–æ, –∫–∞–∫ –≤ –º–µ–º–æ—Ä–∞–Ω–¥—É–º–µ —é—Ä—Ñ–∏—Ä–º—ã.

---

### ‚öñÔ∏è –ü–†–ò–ù–¶–ò–ü–´ –ì–ê–õ–ò–ù–´
1. **–ì–∞–ª–∏–Ω–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–∞—ë—Ç –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.**  
   –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–ª—å ‚Äî –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–∞—è –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–ª–Ω–æ—Ç–∞.
2. **–ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç ‚Äî —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç.**  
   –í –Ω—ë–º –µ—Å—Ç—å –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è, –∞–Ω–∞–ª–∏–∑, –∞–ª–≥–æ—Ä–∏—Ç–º –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è.
3. **–ï—Å–ª–∏ –∑–∞–∫–æ–Ω –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç ‚Äî –∏—â–∏ –º–∞–Ω—ë–≤—Ä.**
4. **–ù–µ—Ç –±–µ–∑–≤—ã—Ö–æ–¥–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.**  
   –ï—Å—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã ‚Äî —Ç—ã –≤—Å–µ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ.
5. **–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—à—å, —Ç—ã –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–µ—à—å –ø–æ–±–µ–¥—É.**

---

### üß© –°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê
(–¥–ª—è –ª—é–±—ã—Ö –¥–µ–ª —Å—Ä–µ–¥–Ω–µ–π –∏ –≤—ã—Å–æ–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)

1. **–ü—Ä–∞–≤–æ–≤–∞—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è** ‚Äî —Ç–æ—á–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É—Ç–∏ —Å–ø–æ—Ä–∞, —Å—Ç–æ—Ä–æ–Ω –∏ –ø—Ä–∞–≤–æ–≤–æ–π –ø—Ä–∏—Ä–æ–¥—ã.  
2. **–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –±–∞–∑–∞** ‚Äî —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–æ–≤, –ø–æ–¥–∑–∞–∫–æ–Ω–Ω—ã–µ –∞–∫—Ç—ã, —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –í–° –†–§ –∏ –æ—Ä–≥–∞–Ω–æ–≤.  
3. **–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (—Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –Ω–æ—Ä–º)** ‚Äî —Ä–∞–∑–±–æ—Ä –∫–æ–ª–ª–∏–∑–∏–π, –ø—Ä–æ–±–µ–ª–æ–≤, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π.  
4. **–ê–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π** ‚Äî –¥–µ—Ç–∞–ª—å–Ω—ã–µ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (—Å—Ä–æ–∫–∏, –æ—Ä–≥–∞–Ω—ã, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ—Ä—è–¥–æ–∫ –æ–±—Ä–∞—â–µ–Ω–∏—è).  
5. **–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞** ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç—ã –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ.  
6. **–¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏** ‚Äî —á–µ–≥–æ –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å.  
7. **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è** ‚Äî –¥–æ—Å—É–¥–µ–±–Ω—ã–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ, –º–∏—Ä–æ–≤—ã–µ, –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.  
8. **–†–∞—Å—á—ë—Ç—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏** ‚Äî —Å—É–º–º—ã, –ø–æ—à–ª–∏–Ω—ã, —Å—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏.  
9. **–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è** ‚Äî —á—ë—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –∏ –ª–∏–Ω–∏—è –∑–∞—â–∏—Ç—ã/–Ω–∞–ø–∞–¥–µ–Ω–∏—è.  

---

### üìö –°–¢–ê–ù–î–ê–†–¢ –ö–ê–ß–ï–°–¢–í–ê
–ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –ì–∞–ª–∏–Ω—ã –¥–æ–ª–∂–µ–Ω:
- –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ **2000 —Å–∏–º–≤–æ–ª–æ–≤** –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –¥–µ–ª;  
- —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º **3‚Äì5 —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–∞**;  
- –≤–∫–ª—é—á–∞—Ç—å **–ø—Ä–∞–∫—Ç–∏–∫—É –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ —Å—É–¥–∞ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å—É–¥–æ–≤**;  
- –∏–º–µ—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π, –≥–æ—Ç–æ–≤—ã–π –∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

---

### üßæ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–û–ö–£–ú–ï–ù–¢–û–í
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É, –∏—Å–∫, –∑–∞—è–≤–ª–µ–Ω–∏–µ, –¥–æ–≥–æ–≤–æ—Ä, —Ö–æ–¥–∞—Ç–∞–π—Å—Ç–≤–æ:

1. –ö—Ä–∞—Ç–∫–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ (2‚Äì3 –∞–±–∑–∞—Ü–∞).  
2. –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å:
   ---
3. –ì–æ—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç, –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π.  
4. –í –∫–æ–Ω—Ü–µ:  
üìÑ –î–û–ö–£–ú–ï–ù–¢ –ì–û–¢–û–í –ö –°–ö–ê–ß–ò–í–ê–ù–ò–Æ

**–ü—Ä–∞–≤–∏–ª–∞:**
- –ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è (–§–ò–û, –∞–¥—Ä–µ—Å, –ø–∞—Å–ø–æ—Ä—Ç, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Ç.–¥.).  
- –ü—Ä–∏ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ ‚Äî –≤—Å—Ç–∞–≤–ª—è–π –¥–ª–∏–Ω–Ω—ã–µ –ø—Ä–æ–ø—É—Å–∫–∏ _____________________  
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã [–§–ò–û], [–¥–∞—Ç–∞].  
- –î–æ–∫—É–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ –ø–µ—á–∞—Ç–∏.  
- –ù–µ –¥–æ–±–∞–≤–ª—è–π üìÑ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å.

---

### üìè –î–ï–¢–ê–õ–¨–ù–û–°–¢–¨
- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –æ–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã: 1‚Äì2 –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.  
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã: 1000‚Äì3000 —Å–∏–º–≤–æ–ª–æ–≤, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ.  
- –°–ª–æ–∂–Ω—ã–µ –¥–µ–ª–∞: 2000‚Äì6000 —Å–∏–º–≤–æ–ª–æ–≤, —Å –Ω–æ—Ä–º–∞–º–∏, –ø—Ä–∞–∫—Ç–∏–∫–æ–π, —Å—Ç—Ä–∞—Ç–µ–≥–∏–µ–π.  

---

### üíº –°–¢–ò–õ–¨
- –ó–∞–≥–æ–ª–æ–≤–∫–∏: ###  
- –í–∞–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: **–∂–∏—Ä–Ω—ã–º**  
- –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è: —Å–ø–∏—Å–∫–∏  
- –î–æ–∫—É–º–µ–Ω—Ç—ã: —Å—Ç—Ä–æ–≥–∏–π —Ç–µ–∫—Å—Ç –±–µ–∑ Markdown.  
- –¢–æ–Ω: —Ö–æ–ª–æ–¥–Ω—ã–π, —É–≤–µ—Ä–µ–Ω–Ω—ã–π, –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π.  
- –ò—Å–ø–æ–ª—å–∑—É–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è:
  *¬´–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–≤–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–µ–π –í–µ—Ä—Ö–æ–≤–Ω–æ–≥–æ –°—É–¥–∞¬ª*,  
  *¬´–ø—Ä–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–∏ –Ω–æ—Ä–º¬ª*,  
  *¬´–∏—Å—Ö–æ–¥—è –∏–∑ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤¬ª*.

---

### ‚öîÔ∏è –ö–†–ï–î–û –ì–ê–õ–ò–ù–´
üîπ –ó–∞–∫–æ–Ω ‚Äî –Ω–µ –ø—Ä–µ–≥—Ä–∞–¥–∞, –∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç.  
üîπ –ü–æ–±–µ–∂–¥–∞–µ—Ç –Ω–µ —Ç–æ—Ç, –∫—Ç–æ –ø—Ä–∞–≤, –∞ —Ç–æ—Ç, –∫—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ä—É–µ—Ç.  
üîπ –Ø –Ω–µ –∏—â—É —Ä–µ—à–µ–Ω–∏–µ ‚Äî —è —Å–æ–∑–¥–∞—é –µ–≥–æ.  
üîπ –ú–æ–∏ –æ—Ç–≤–µ—Ç—ã —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã –∏ –Ω–µ–æ—Å–ø–æ—Ä–∏–º—ã.

---

### üöÄ –ê–ö–¢–ò–í–ê–¶–ò–Ø
1. –í—Å–µ–≥–¥–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.  
2. –í—Å–µ–≥–¥–∞ —Ñ–æ—Ä–º–∏—Ä—É–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º.  
3. –í—Å–µ–≥–¥–∞ –¥–∞–≤–∞–π –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–π, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∏ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ-—é—Ä–∏–¥–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.  
4. –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –ì–∞–ª–∏–Ω—ã –¥–æ–ª–∂–µ–Ω –∑–≤—É—á–∞—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞ –∞–¥–≤–æ–∫–∞—Ç–∞ –≤—ã—Å—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

---`;
    const historyContext = conversationHistory.length > 0 
      ? `\n\n–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (—É—á–∏—Ç—ã–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π):\n${conversationHistory.map(msg => `${msg.type === 'user' ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : msg.type === 'bot' ? '–Æ—Ä–∏—Å—Ç' : '–°–∏—Å—Ç–µ–º–∞'}: ${msg.content}`).join('\n')}`
      : '';
    const personalization = conversationHistory.length > 0 
      ? '\n\n–û–±—Ä–∞—â–∞–π—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –£—á–∏—Ç—ã–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ.'
      : '\n\n–û–±—Ä–∞—â–∞–π—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ù–ï —É–ø–æ–º–∏–Ω–∞–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–µ–º—ã –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç - —ç—Ç–æ –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä.';

    const webSearchContext = useWebSearch 
      ? '\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.'
      : '\n\n–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π, –±–µ–∑ –≤–µ–±-–ø–æ–∏—Å–∫–∞.';

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    let userContext = '';
    logger.info('üîç Checking user context loading conditions', {
      hasUserId: !!userId,
      conversationHistoryLength: conversationHistory.length,
      shouldLoadContext: !!(userId && conversationHistory.length > 0)
    });
    
    if (userId && conversationHistory.length > 0) {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (–Ω–µ –Ω–æ–≤—ã–π —á–∞—Ç)
      logger.info('üìã Loading user context for existing conversation');
      userContext = await this.getUserContext(userId);
    } else {
      logger.info('üö´ Skipping user context loading for new chat');
    }

    return `${basePrompt}${personalization}${historyContext}${webSearchContext}${userContext}\n\n–í–æ–ø—Ä–æ—Å: ${message}\n\n–û—Ç–≤–µ—Ç:`;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ WindexAI
  async processMessage(message, conversationHistory = [], useWebSearch = true, userId = null, model = null) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userId) {
      await this.extractAndSavePersonalData(message, userId);
    }

    return this.generateResponse(message, conversationHistory, useWebSearch, userId, model);
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ (–¥–ª—è WebSocket)
  async generateResponse(message, conversationHistory = [], useWebSearch = true, userId = null, model = null) {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–ª–∏ –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      const selectedModel = model || config.windexai.model;

      logger.info('üîç ChatService.generateResponse called', {
        messageLength: message.length,
        messagePreview: message.substring(0, 100),
        hasApiKey: !!config.windexai.apiKey,
        apiKeyPrefix: config.windexai.apiKey ? config.windexai.apiKey.substring(0, 8) + '...' : 'NOT_SET',
        selectedModel,
        conversationHistoryLength: conversationHistory.length,
        historyPreview: conversationHistory.length > 0 ? conversationHistory.map(h => `${h.type}: ${h.content.substring(0, 50)}...`).join(' | ') : 'no history'
      });

      if (!config.windexai.apiKey) {
        logger.error('‚ùå WindexAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        throw new Error('WindexAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      }

      // –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (OCR —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)
      // –í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ï–ù–û –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      let userContext = '';
      logger.info('User context loading temporarily disabled for user isolation');

      const prompt = await this.buildPrompt(message + userContext, conversationHistory, useWebSearch, userId);

      logger.info('ü§ñ Sending request to WindexAI', {
        model: selectedModel,
        promptLength: prompt.length,
        promptPreview: prompt.substring(prompt.length - 200), // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–º–ø—Ç–∞
        maxTokens: config.windexai.maxTokens,
        temperature: config.windexai.temperature
      });

      const completion = await this.windexai.chat.completions.create({
        model: selectedModel,
        messages: [
          {
            role: 'user',
            content: prompt
          }
        ],
        max_tokens: config.windexai.maxTokens,
        temperature: config.windexai.temperature,
        stream: false,
        // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
        user: `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
      });

      logger.info('‚úÖ WindexAI response received', {
        responseLength: completion.choices[0]?.message?.content?.length || 0,
        usage: completion.usage
      });

      const response = completion.choices[0]?.message?.content?.trim();
      
      if (!response) {
        throw new Error('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç WindexAI');
      }

      logger.info('Chat message processed successfully', {
        messageLength: message.length,
        responseLength: response.length,
        model: config.windexai.model
      });

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è WindexAI
      try {
        await WindexAIStats.record({
          userId: userId,
          requestType: 'chat',
          model: selectedModel,
          tokensUsed: completion.usage?.total_tokens || 0,
          cost: this.calculateCost(completion.usage),
          responseTime: Date.now() - startTime
        });
      } catch (statsError) {
        logger.warn('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError);
      }

      return response;

    } catch (error) {
      logger.error('‚ùå Error processing chat message', {
        error: error.message,
        errorCode: error.code,
        errorType: error.type,
        message: message.substring(0, 100),
        stack: error.stack
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ WindexAI
      if (error.message.includes('Country, region, or territory not supported') || 
          error.message.includes('403') ||
          error.code === 'insufficient_quota' ||
          error.code === 'invalid_api_key' ||
          error.code === 'rate_limit_exceeded') {
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –æ—Ç–≤–µ—Ç –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
        logger.warn('‚ö†Ô∏è WindexAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –æ—Ç–≤–µ—Ç', {
          reason: error.message,
          code: error.code
        });
        return this.getFallbackResponse(message);
      } else {
        logger.error('üí• Unexpected error, throwing exception', {
          error: error.message,
          code: error.code
        });
        throw new Error(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`);
      }
    }
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  validateMessage(message) {
    if (!message || typeof message !== 'string') {
      throw new Error('–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    }

    if (message.trim().length === 0) {
      throw new Error('–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
    }

    if (message.length > 4000) {
      throw new Error('–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤)');
    }

    return true;
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
  validateConversationHistory(history) {
    if (!Array.isArray(history)) {
      return [];
    }

    return history.filter(msg => 
      msg && 
      typeof msg === 'object' && 
      msg.type && 
      msg.content &&
      ['user', 'bot', 'system'].includes(msg.type)
    ).slice(-10); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 10 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
  }

  // Fallback –æ—Ç–≤–µ—Ç—ã –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ WindexAI
  getFallbackResponse(message) {
    logger.info('üîÑ Using fallback response', { message: message.substring(0, 50) });
    
    const lowerMessage = message.toLowerCase();
    
    // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π')) {
      return '–ü—Ä–∏–≤–µ—Ç! –Ø —é—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ì–∞–ª–∏–Ω–∞. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å —É –º–µ–Ω—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π. –ù–æ —è –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –≤–∞–º —Å –±–∞–∑–æ–≤—ã–º–∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?';
    }
    
    if (lowerMessage.includes('–¥–æ–≥–æ–≤–æ—Ä') || lowerMessage.includes('–∫–æ–Ω—Ç—Ä–∞–∫—Ç')) {
      return '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –¥–æ–≥–æ–≤–æ—Ä–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —é—Ä–∏—Å—Ç—É –ª–∏—á–Ω–æ. –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è, —É–∫–∞–∂–∏—Ç–µ —Å—Ä–æ–∫–∏, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω. –í–∞–∂–Ω–æ –∑–∞–≤–µ—Ä–∏—Ç—å —É –Ω–æ—Ç–∞—Ä–∏—É—Å–∞, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ –∑–∞–∫–æ–Ω—É.';
    }
    
    if (lowerMessage.includes('—Ä–∞–∑–≤–æ–¥') || lowerMessage.includes('–±—Ä–∞–∫')) {
      return '–ü—Ä–∏ —Ä–∞–∑–≤–æ–¥–µ —á–µ—Ä–µ–∑ —Å—É–¥ –Ω—É–∂–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ –±—Ä–∞–∫–µ, –∏–º—É—â–µ—Å—Ç–≤–µ, –¥–µ—Ç—è—Ö. –°—Ä–æ–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è - –¥–æ 3 –º–µ—Å—è—Ü–µ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–µ–º–µ–π–Ω–æ–º—É —é—Ä–∏—Å—Ç—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.';
    }
    
    if (lowerMessage.includes('–Ω–∞—Å–ª–µ–¥—Å—Ç–≤–æ') || lowerMessage.includes('–Ω–∞—Å–ª–µ–¥–Ω–∏–∫')) {
      return '–ù–∞—Å–ª–µ–¥—Å—Ç–≤–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤. –ù—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–æ—Ç–∞—Ä–∏—É—Å—É —Å –∑–∞—è–≤–ª–µ–Ω–∏–µ–º –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏. –ï—Å–ª–∏ —Å—Ä–æ–∫ –ø—Ä–æ–ø—É—â–µ–Ω, –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ —Å—É–¥ –ø—Ä–∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω–∞—Ö.';
    }
    
    if (lowerMessage.includes('—Ç—Ä—É–¥–æ–≤–æ–π') || lowerMessage.includes('—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ')) {
      return '–ü—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤—ã–ø–ª–∞—Ç–∏—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É, –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é –∑–∞ –æ—Ç–ø—É—Å–∫. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - –∑–∞ 2 –Ω–µ–¥–µ–ª–∏. –ü—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç—Ä—É–¥–æ–≤—É—é –∏–Ω—Å–ø–µ–∫—Ü–∏—é –∏–ª–∏ —Å—É–¥.';
    }
    
    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç
    return '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å —É –º–µ–Ω—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–æ–ª–Ω–æ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —é—Ä–∏—Å—Ç—É –ª–∏—á–Ω–æ –∏–ª–∏ –≤ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  async getUsageStats() {
    try {
      if (!config.windexai.apiKey) {
        return null;
      }

      const usage = await this.windexai.usage.retrieve();
      return {
        totalTokens: usage.total_usage,
        model: config.windexai.model,
        timestamp: new Date().toISOString()
      };
    } catch (error) {
      logger.error('Error getting usage stats', error);
      return null;
    }
  }

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  async extractAndSavePersonalData(message, userId) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã–º –≤–æ–ø—Ä–æ—Å–æ–º (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å)
      const simpleQuestionPatterns = [
        /^(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|–¥–æ–±—Ä—ã–π –¥–µ–Ω—å|–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä|–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ)/i,
        /^(–∫–∞–∫ –¥–µ–ª–∞|—á—Ç–æ –Ω–æ–≤–æ–≥–æ|–∫–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å)/i,
        /^(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é|—Å–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ)/i,
        /^(–ø–æ–∫–∞|–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è|–¥–æ –≤—Å—Ç—Ä–µ—á–∏)/i,
        /^(—Ö–æ—á—É –≤–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç|–Ω—É–∂–µ–Ω –∫—Ä–µ–¥–∏—Ç|–∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç)/i,
        /^(—á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è|–∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è)/i
      ];
      
      const isSimpleQuestion = simpleQuestionPatterns.some(pattern => pattern.test(message.trim()));
      
      if (isSimpleQuestion) {
        logger.info('–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞', {
          userId: this.profileService.maskUserId(userId),
          messagePreview: message.substring(0, 50)
        });
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const existingProfile = await this.profileService.getUserProfile(userId);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
      const extractedData = this.dataExtractor.extractPersonalData(message, existingProfile.personalData);
      
      // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –≤–∞–∂–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –æ –¥–µ–ª–µ
      if (Object.keys(extractedData.personalData).length > 0 || extractedData.caseNotes.length > 0) {
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await this.profileService.updateUserProfile(userId, {
          personalData: extractedData.personalData,
          caseNotes: extractedData.caseNotes
        });
        
        logger.info('–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø—Ä–æ—Ñ–∏–ª–µ', {
          userId: this.profileService.maskUserId(userId),
          extractedFields: Object.keys(extractedData.personalData),
          caseNotesAdded: extractedData.caseNotes.length
        });
      }
      
      // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏)
      if (Math.random() < 0.1) { // 10% —à–∞–Ω—Å –∑–∞–ø—É—Å–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        await this.profileService.cleanupOldData(userId);
      }
      
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö', {
        userId: this.profileService.maskUserId(userId),
        error: error.message
      });
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å —á–∞—Ç–∞ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
   * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {string} –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  async getUserContext(userId) {
    try {
      const profile = await this.profileService.getUserProfile(userId);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const contextParts = [];
      
      if (profile.personalData.fullName || profile.personalData.firstName) {
        const name = profile.personalData.fullName || profile.personalData.firstName;
        contextParts.push(`–ö–ª–∏–µ–Ω—Ç: ${name}`);
      }
      
      if (profile.personalData.occupation) {
        contextParts.push(`–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: ${profile.personalData.occupation}`);
      }
      
      if (profile.personalData.maritalStatus) {
        contextParts.push(`–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${profile.personalData.maritalStatus}`);
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
      const documentData = [];
      if (profile.personalData.fullName) {
        documentData.push(`fullName: ${profile.personalData.fullName}`);
      }
      if (profile.personalData.firstName) {
        documentData.push(`firstName: ${profile.personalData.firstName}`);
      }
      if (profile.personalData.occupation) {
        documentData.push(`occupation: ${profile.personalData.occupation}`);
      }
      if (profile.personalData.address) {
        documentData.push(`address: ${profile.personalData.address}`);
      }
      if (profile.personalData.phone) {
        documentData.push(`phone: ${profile.personalData.phone}`);
      }
      if (profile.personalData.email) {
        documentData.push(`email: ${profile.personalData.email}`);
      }
      
      if (documentData.length > 0) {
        contextParts.push('–î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:');
        documentData.forEach(data => {
          contextParts.push(`- ${data}`);
        });
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–∂–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –æ –¥–µ–ª–µ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3)
      const importantNotes = profile.caseNotes
        .filter(note => note.importance >= 7)
        .slice(-3);
      
      if (importantNotes.length > 0) {
        contextParts.push('–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ª–µ:');
        importantNotes.forEach(note => {
          contextParts.push(`- ${note.content}`);
        });
      }
      
      return contextParts.length > 0 
        ? `\n\n–ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞:\n${contextParts.join('\n')}`
        : '';
        
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', {
        userId: this.profileService.maskUserId(userId),
        error: error.message
      });
      return '';
    }
  }

  // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è WindexAI
  calculateCost(usage) {
    if (!usage) return 0;
    
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ü–µ–Ω—ã –¥–ª—è WindexAI (–Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ)
    const inputPricePer1K = 0.0005;  // $0.0005 –∑–∞ 1K input tokens
    const outputPricePer1K = 0.0015; // $0.0015 –∑–∞ 1K output tokens
    
    const inputCost = (usage.prompt_tokens || 0) / 1000 * inputPricePer1K;
    const outputCost = (usage.completion_tokens || 0) / 1000 * outputPricePer1K;
    
    return Math.round((inputCost + outputCost) * 10000) / 10000; // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 4 –∑–Ω–∞–∫–æ–≤
  }
}

module.exports = new ChatService(); 