import React, { useState, useEffect } from 'react';
import { 
  FileText, 
  Upload,
  Plus,
  Search,
  Filter,
  Calendar,
  Clock,
  File,
  Star,
  Share2,
  CheckCircle,
  AlertCircle,
  Info,
  X
} from 'lucide-react';
import { useNavigate } from 'react-router-dom';
import './MyDocuments.css';
import DocumentUpload from '../components/DocumentUpload';

const MyDocuments = () => {
  const navigate = useNavigate();
  const [documents, setDocuments] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedDocument, setSelectedDocument] = useState(null);
  const [showUpload, setShowUpload] = useState(false);
  const [uploadDocumentType, setUploadDocumentType] = useState(null);
  const [filterType, setFilterType] = useState('all');
  const [sortBy, setSortBy] = useState('date');
  const [isVisible, setIsVisible] = useState(false);

  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
  const documentTypes = [
    { 
      id: 'passport', 
      name: '–ü–∞—Å–ø–æ—Ä—Ç –†–§', 
      icon: 'üõÇ',
      description: '–°–µ—Ä–∏—è, –Ω–æ–º–µ—Ä, –§–ò–û, –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è',
      fields: ['series', 'number', 'firstName', 'lastName', 'middleName', 'birthDate', 'birthPlace', 'issueDate', 'issuedBy'],
      color: '#667eea'
    },
    { 
      id: 'snils', 
      name: '–°–ù–ò–õ–°', 
      icon: 'üìã',
      description: '–ù–æ–º–µ—Ä –°–ù–ò–õ–°, –§–ò–û, –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
      fields: ['number', 'firstName', 'lastName', 'middleName', 'registrationDate'],
      color: '#28a745'
    },
    { 
      id: 'license', 
      name: '–í–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞', 
      icon: 'üöó',
      description: '–°–µ—Ä–∏—è, –Ω–æ–º–µ—Ä, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –¥–∞—Ç—ã',
      fields: ['series', 'number', 'firstName', 'lastName', 'middleName', 'birthDate', 'categories', 'issueDate', 'expiryDate'],
      color: '#ffc107'
    },
    { 
      id: 'birth', 
      name: '–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏', 
      icon: 'üë∂',
      description: '–°–µ—Ä–∏—è, –Ω–æ–º–µ—Ä, –§–ò–û —Ä–µ–±–µ–Ω–∫–∞ –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π',
      fields: ['series', 'number', 'childName', 'childLastName', 'childMiddleName', 'birthDate', 'birthPlace', 'fatherName', 'motherName'],
      color: '#dc3545'
    },
    { 
      id: 'inn', 
      name: '–ò–ù–ù', 
      icon: 'üìä',
      description: '–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –Ω–∞–ª–æ–≥–æ–ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞',
      fields: ['number', 'firstName', 'lastName', 'middleName', 'birthDate', 'issueDate'],
      color: '#17a2b8'
    },
    { 
      id: 'medical', 
      name: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–Ω–∏–∂–∫–∞', 
      icon: 'üè•',
      description: '–ù–æ–º–µ—Ä, –§–ò–û, –¥–∞—Ç–∞ –≤—ã–¥–∞—á–∏, —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è',
      fields: ['number', 'firstName', 'lastName', 'middleName', 'issueDate', 'expiryDate', 'issuedBy'],
      color: '#e83e8c'
    },
    { 
      id: 'military', 
      name: '–í–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç', 
      icon: 'üéñÔ∏è',
      description: '–°–µ—Ä–∏—è, –Ω–æ–º–µ—Ä, –∑–≤–∞–Ω–∏–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≥–æ–¥–Ω–æ—Å—Ç–∏',
      fields: ['series', 'number', 'firstName', 'lastName', 'middleName', 'rank', 'category', 'issueDate'],
      color: '#6f42c1'
    },
    { 
      id: 'foreign', 
      name: '–ó–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç', 
      icon: 'üåç',
      description: '–°–µ—Ä–∏—è, –Ω–æ–º–µ—Ä, –§–ò–û, –¥–∞—Ç–∞ –≤—ã–¥–∞—á–∏',
      fields: ['series', 'number', 'firstName', 'lastName', 'middleName', 'birthDate', 'issueDate', 'expiryDate'],
      color: '#fd7e14'
    },
    { 
      id: 'contract', 
      name: '–î–æ–≥–æ–≤–æ—Ä', 
      icon: 'üìÑ',
      description: '–ù–æ–º–µ—Ä, —Å—Ç–æ—Ä–æ–Ω—ã, –ø—Ä–µ–¥–º–µ—Ç, —Å—É–º–º–∞',
      fields: ['number', 'date', 'parties', 'subject', 'amount', 'signatureDate'],
      color: '#20c997'
    },
    { 
      id: 'certificate', 
      name: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', 
      icon: 'üèÜ',
      description: '–ù–æ–º–µ—Ä, –§–ò–û, –¥–∞—Ç–∞ –≤—ã–¥–∞—á–∏, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
      fields: ['number', 'firstName', 'lastName', 'middleName', 'issueDate', 'issuedBy', 'validUntil'],
      color: '#6c757d'
    },
    { 
      id: 'diploma', 
      name: '–î–∏–ø–ª–æ–º', 
      icon: 'üéì',
      description: '–°–µ—Ä–∏—è, –Ω–æ–º–µ—Ä, –§–ò–û, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –¥–∞—Ç–∞',
      fields: ['series', 'number', 'firstName', 'lastName', 'middleName', 'specialty', 'issueDate', 'institution'],
      color: '#495057'
    },
    { 
      id: 'insurance', 
      name: '–°—Ç—Ä–∞—Ö–æ–≤–æ–π –ø–æ–ª–∏—Å', 
      icon: 'üõ°Ô∏è',
      description: '–ù–æ–º–µ—Ä, –§–ò–û, —Ç–∏–ø —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è, —Å—Ä–æ–∫',
      fields: ['number', 'firstName', 'lastName', 'middleName', 'insuranceType', 'issueDate', 'expiryDate'],
      color: '#198754'
    }
  ];

  useEffect(() => {
    setIsVisible(true);
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ localStorage
    const savedDocuments = localStorage.getItem('myDocuments');
    if (savedDocuments) {
      setDocuments(JSON.parse(savedDocuments));
    }
  }, []);

  const filteredDocuments = documents
    .filter(doc => {
      const matchesSearch = doc.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           doc.content.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesFilter = filterType === 'all' || doc.type === filterType;
      return matchesSearch && matchesFilter;
    })
    .sort((a, b) => {
      switch (sortBy) {
        case 'name':
          return a.name.localeCompare(b.name);
        case 'date':
          return new Date(b.uploadedAt) - new Date(a.uploadedAt);
        case 'size':
          return parseFloat(a.size) - parseFloat(b.size);
        default:
          return 0;
      }
    });

  const handleDocumentClick = (document) => {
    setSelectedDocument(document);
  };

  const handleDeleteDocument = (documentId) => {
    const updatedDocuments = documents.filter(doc => doc.id !== documentId);
    setDocuments(updatedDocuments);
    localStorage.setItem('documents', JSON.stringify(updatedDocuments));
  };

  const handleDownloadDocument = (document) => {
    const blob = new Blob([document.content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = document.name;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handleTextExtracted = (text, filename) => {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫
    const newDocument = {
      id: Date.now(),
      name: filename,
      content: text,
      uploadedAt: new Date().toISOString(),
      type: uploadDocumentType?.id || 'legal',
      status: 'analyzed',
      size: `${(text.length / 1024).toFixed(1)} KB`
    };
    
    setDocuments(prev => [newDocument, ...prev]);
    localStorage.setItem('myDocuments', JSON.stringify([newDocument, ...documents]));
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setShowUpload(false);
    setUploadDocumentType(null);
  };

  const handleCloseUpload = () => {
    setShowUpload(false);
    setUploadDocumentType(null);
  };

  const handleDocumentTypeSelect = (documentType) => {
    setUploadDocumentType(documentType);
    setShowUpload(true);
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case 'analyzed':
        return <CheckCircle size={16} className="status-icon status-icon--success" />;
      case 'pending':
        return <Clock size={16} className="status-icon status-icon--warning" />;
      case 'error':
        return <AlertCircle size={16} className="status-icon status-icon--error" />;
      default:
        return <Info size={16} className="status-icon status-icon--info" />;
    }
  };

  const getStatusText = (status) => {
    switch (status) {
      case 'analyzed':
        return '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω';
      case 'pending':
        return '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ';
      case 'error':
        return '–û—à–∏–±–∫–∞';
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getTypeIcon = (type) => {
    switch (type) {
      case 'contract':
        return <FileText size={20} />;
      case 'legal':
        return <File size={20} />;
      default:
        return <File size={20} />;
    }
  };

  const getComplianceColor = (compliance) => {
    switch (compliance) {
      case 'high':
        return '#28a745';
      case 'medium':
        return '#ffc107';
      case 'low':
        return '#dc3545';
      default:
        return '#6c757d';
    }
  };

  return (
    <div className={`my-documents-page ${isVisible ? 'my-documents-page--visible' : ''}`}>
      {/* Header Section */}
      <section className="my-documents-header">
        <div className="my-documents-header__background">
          <div className="my-documents-header__gradient"></div>
        </div>
        
        <div className="my-documents-header__content">
          <div className="my-documents-header__info">
            <h1 className="my-documents-header__title">–ú–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h1>
            <p className="my-documents-header__subtitle">
              –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º –ø–æ–ª–µ–π
            </p>
            <div className="my-documents-header__stats">
              <div className="stat-item">
                <FileText size={20} />
                <span>{documents.length} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</span>
              </div>
              <div className="stat-item">
                <CheckCircle size={20} />
                <span>{documents.filter(d => d.status === 'analyzed').length} –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</span>
              </div>
              <div className="stat-item">
                <Clock size={20} />
                <span>{documents.filter(d => d.status === 'pending').length} –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Document Types Section */}
      <section className="document-types-section">
        <div className="document-types-container">
          <div className="document-types-header">
            <h2>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –†–§</h2>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ø–æ–ª–µ–π</p>
          </div>
          
          <div className="document-types-grid">
            {documentTypes.map((docType) => (
              <div
                key={docType.id}
                className="document-type-card"
                style={{ '--card-color': docType.color }}
                onClick={() => handleDocumentTypeSelect(docType)}
              >
                <div className="document-type-header">
                  <div className="document-type-icon">
                    <span>{docType.icon}</span>
                  </div>
                  <div className="document-type-action">
                    <Upload size={20} />
                    <span>–ó–∞–≥—Ä—É–∑–∏—Ç—å</span>
                  </div>
                </div>
                
                <div className="document-type-content">
                  <h3 className="document-type-title">{docType.name}</h3>
                  <p className="document-type-description">{docType.description}</p>
                  
                  <div className="document-type-fields">
                    <span className="fields-label">–ü–æ–ª—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:</span>
                    <div className="fields-list">
                      {docType.fields.slice(0, 4).map((field, index) => (
                        <span key={index} className="field-tag">
                          {field === 'series' ? '–°–µ—Ä–∏—è' :
                           field === 'number' ? '–ù–æ–º–µ—Ä' :
                           field === 'firstName' ? '–ò–º—è' :
                           field === 'lastName' ? '–§–∞–º–∏–ª–∏—è' :
                           field === 'middleName' ? '–û—Ç—á–µ—Å—Ç–≤–æ' :
                           field === 'birthDate' ? '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è' :
                           field === 'birthPlace' ? '–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è' :
                           field === 'issueDate' ? '–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏' :
                           field === 'issuedBy' ? '–ö–µ–º –≤—ã–¥–∞–Ω' :
                           field === 'registrationDate' ? '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' :
                           field === 'categories' ? '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏' :
                           field === 'expiryDate' ? '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è' :
                           field === 'childName' ? '–ò–º—è —Ä–µ–±–µ–Ω–∫–∞' :
                           field === 'childLastName' ? '–§–∞–º–∏–ª–∏—è —Ä–µ–±–µ–Ω–∫–∞' :
                           field === 'childMiddleName' ? '–û—Ç—á–µ—Å—Ç–≤–æ —Ä–µ–±–µ–Ω–∫–∞' :
                           field === 'fatherName' ? '–ò–º—è –æ—Ç—Ü–∞' :
                           field === 'motherName' ? '–ò–º—è –º–∞—Ç–µ—Ä–∏' :
                           field === 'date' ? '–î–∞—Ç–∞' :
                           field === 'parties' ? '–°—Ç–æ—Ä–æ–Ω—ã' :
                           field === 'subject' ? '–ü—Ä–µ–¥–º–µ—Ç' :
                           field === 'amount' ? '–°—É–º–º–∞' :
                           field === 'signatureDate' ? '–î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è' :
                           field === 'validUntil' ? '–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ' :
                           field === 'specialty' ? '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å' :
                           field === 'institution' ? '–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ' :
                           field === 'insuranceType' ? '–¢–∏–ø —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è' :
                           field === 'rank' ? '–ó–≤–∞–Ω–∏–µ' :
                           field === 'category' ? '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' : field}
                        </span>
                      ))}
                      {docType.fields.length > 4 && (
                        <span className="field-tag more">+{docType.fields.length - 4} –µ—â–µ</span>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Search and Filters Section */}
      <section className="my-documents-controls">
        <div className="my-documents-controls__search">
          <div className="search-input">
            <Search size={20} />
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>
        
        <div className="my-documents-controls__filters">
          <div className="filter-group">
            <Filter size={16} />
            <select 
              value={filterType} 
              onChange={(e) => setFilterType(e.target.value)}
              className="filter-select"
            >
              <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
              <option value="contract">–î–æ–≥–æ–≤–æ—Ä—ã</option>
              <option value="legal">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</option>
            </select>
          </div>
          
          <div className="filter-group">
            <Calendar size={16} />
            <select 
              value={sortBy} 
              onChange={(e) => setSortBy(e.target.value)}
              className="filter-select"
            >
              <option value="date">–ü–æ –¥–∞—Ç–µ</option>
              <option value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
              <option value="size">–ü–æ —Ä–∞–∑–º–µ—Ä—É</option>
            </select>
          </div>
        </div>
      </section>

      {/* Documents Grid Section */}
      <section className="my-documents-content">
        {filteredDocuments.length === 0 ? (
          <div className="my-documents-empty">
            <div className="my-documents-empty__icon">
              <FileText size={64} />
            </div>
            <h3 className="my-documents-empty__title">–î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="my-documents-empty__description">
              {searchTerm ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å' : '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞'}
            </p>
            {!searchTerm && (
              <button 
                className="my-documents-empty__btn"
                onClick={() => navigate('/documents')}
              >
                <Plus size={20} />
                –ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º
              </button>
            )}
          </div>
        ) : (
          <div className="my-documents-grid">
            {filteredDocuments.map((doc, index) => (
              <div 
                key={doc.id} 
                className="document-card"
              >
                <div className="document-card__header">
                  <div className="document-card__icon">
                    {getTypeIcon(doc.type)}
                  </div>
                  <div className="document-card__status">
                    {getStatusIcon(doc.status)}
                    <span>{getStatusText(doc.status)}</span>
                  </div>
                </div>
                
                <div className="document-card__content">
                  <h3 className="document-card__title">{doc.name}</h3>
                  <p className="document-card__preview">
                    {doc.content.substring(0, 80)}...
                  </p>
                  
                  <div className="document-card__meta">
                    <div className="document-card__date">
                      <Calendar size={14} />
                      <span>{new Date(doc.uploadedAt).toLocaleDateString()}</span>
                    </div>
                    <div className="document-card__size">
                      <File size={14} />
                      <span>{doc.size}</span>
                    </div>
                  </div>
                  
                </div>
                
                <div className="document-card__actions">
                  <button 
                    className="document-card__btn document-card__btn--view"
                    onClick={() => handleDocumentClick(doc)}
                    title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
                  >
                    <FileText size={16} />
                  </button>
                  
                  <button 
                    className="document-card__btn document-card__btn--share"
                    title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
                  >
                    <Share2 size={16} />
                  </button>
                  
                  <button
                    className="document-card__btn document-card__btn--delete"
                    onClick={() => handleDeleteDocument(doc.id)}
                    title="–£–¥–∞–ª–∏—Ç—å"
                  >
                    <X size={16} />
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </section>

      {/* Document Upload Modal */}
      {showUpload && (
        <DocumentUpload
          onTextExtracted={handleTextExtracted}
          onClose={handleCloseUpload}
          documentType={uploadDocumentType}
          storageKey="myDocuments"
        />
      )}

      {/* Document Modal */}
      {selectedDocument && (
        <div className="document-modal">
          <div className="document-modal__overlay" onClick={() => setSelectedDocument(null)}></div>
          <div className="document-modal__content">
            <div className="document-modal__header">
              <div className="document-modal__title">
                <h2>{selectedDocument.name}</h2>
                <div className="document-modal__status">
                  {getStatusIcon(selectedDocument.status)}
                  <span>{getStatusText(selectedDocument.status)}</span>
                </div>
              </div>
              <button 
                className="document-modal__close"
                onClick={() => setSelectedDocument(null)}
              >
                √ó
              </button>
            </div>
            
            <div className="document-modal__body">
              <div className="document-modal__info">
                <div className="info-item">
                  <Calendar size={16} />
                  <span>–ó–∞–≥—Ä—É–∂–µ–Ω: {new Date(selectedDocument.uploadedAt).toLocaleDateString()}</span>
                </div>
                <div className="info-item">
                  <File size={16} />
                  <span>–†–∞–∑–º–µ—Ä: {selectedDocument.size}</span>
                </div>
                <div className="info-item">
                  <FileText size={16} />
                  <span>–¢–∏–ø: {selectedDocument.type === 'contract' ? '–î–æ–≥–æ–≤–æ—Ä' : '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç'}</span>
                </div>
              </div>
              
              <div className="document-modal__content-text">
                <h4>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:</h4>
                <div className="content-text">
                  {selectedDocument.content}
                </div>
              </div>
              
              {/* –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
              {selectedDocument.analysis && (
                <div className="document-modal__analysis">
                  <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:</h4>
                  
                  {/* –°–≤–æ–¥–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ */}
                  {selectedDocument.analysis.summary && (
                    <div className="analysis-summary">
                      <h5>–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞:</h5>
                      <div className="summary-grid">
                        <div className="summary-item">
                          <span className="summary-label">–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:</span>
                          <span className="summary-value">{selectedDocument.analysis.summary.documentType || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}</span>
                        </div>
                        <div className="summary-item">
                          <span className="summary-label">–ö–∞—á–µ—Å—Ç–≤–æ:</span>
                          <span className={`summary-value quality-${selectedDocument.analysis.summary.overallQuality || 'average'}`}>
                            {selectedDocument.analysis.summary.overallQuality === 'excellent' ? '–û—Ç–ª–∏—á–Ω–æ–µ' :
                             selectedDocument.analysis.summary.overallQuality === 'good' ? '–•–æ—Ä–æ—à–µ–µ' :
                             selectedDocument.analysis.summary.overallQuality === 'average' ? '–°—Ä–µ–¥–Ω–µ–µ' : '–ü–ª–æ—Ö–æ–µ'}
                          </span>
                        </div>
                        <div className="summary-item">
                          <span className="summary-label">–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:</span>
                          <span className={`summary-value risk-${selectedDocument.analysis.summary.riskLevel || 'medium'}`}>
                            {selectedDocument.analysis.summary.riskLevel === 'low' ? '–ù–∏–∑–∫–∏–π' :
                             selectedDocument.analysis.summary.riskLevel === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π' :
                             selectedDocument.analysis.summary.riskLevel === 'high' ? '–í—ã—Å–æ–∫–∏–π' : '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'}
                          </span>
                        </div>
                      </div>
                      {selectedDocument.analysis.summary.mainIssues && selectedDocument.analysis.summary.mainIssues.length > 0 && (
                        <div className="main-issues">
                          <h6>–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:</h6>
                          <ul>
                            {selectedDocument.analysis.summary.mainIssues.map((issue, index) => (
                              <li key={index}>{issue}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                    </div>
                  )}

                  {/* –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ */}
                  {selectedDocument.analysis.legalErrors && selectedDocument.analysis.legalErrors.length > 0 && (
                    <div className="analysis-section">
                      <h5>üö® –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:</h5>
                      <div className="errors-list">
                        {selectedDocument.analysis.legalErrors.map((error, index) => (
                          <div key={index} className={`error-item severity-${error.severity || 'medium'}`}>
                            <div className="error-header">
                              <span className="error-type">{error.type}</span>
                              <span className={`error-severity severity-${error.severity || 'medium'}`}>
                                {error.severity === 'critical' ? '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è' :
                                 error.severity === 'high' ? '–í—ã—Å–æ–∫–∞—è' :
                                 error.severity === 'medium' ? '–°—Ä–µ–¥–Ω—è—è' : '–ù–∏–∑–∫–∞—è'}
                              </span>
                            </div>
                            <div className="error-description">{error.description}</div>
                            {error.location && <div className="error-location">üìç –ú–µ—Å—Ç–æ: {error.location}</div>}
                            {error.solution && <div className="error-solution">üí° –†–µ—à–µ–Ω–∏–µ: {error.solution}</div>}
                            {error.legalBasis && <div className="error-basis">‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞—è –æ—Å–Ω–æ–≤–∞: {error.legalBasis}</div>}
                          </div>
                        ))}
                      </div>
                    </div>
                  )}

                  {/* –†–∏—Å–∫–∏ */}
                  {selectedDocument.analysis.risks && selectedDocument.analysis.risks.length > 0 && (
                    <div className="analysis-section">
                      <h5>‚ö†Ô∏è –†–∏—Å–∫–∏:</h5>
                      <div className="risks-list">
                        {selectedDocument.analysis.risks.map((risk, index) => (
                          <div key={index} className={`risk-item probability-${risk.probability || 'medium'}`}>
                            <div className="risk-header">
                              <span className="risk-category">{risk.category}</span>
                              <span className={`risk-probability probability-${risk.probability || 'medium'}`}>
                                –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {risk.probability === 'high' ? '–í—ã—Å–æ–∫–∞—è' :
                                            risk.probability === 'medium' ? '–°—Ä–µ–¥–Ω—è—è' : '–ù–∏–∑–∫–∞—è'}
                              </span>
                            </div>
                            <div className="risk-description">{risk.description}</div>
                            {risk.legalConsequences && <div className="risk-consequences">‚öñÔ∏è –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è: {risk.legalConsequences}</div>}
                            {risk.mitigation && <div className="risk-mitigation">üõ°Ô∏è –ú–µ—Ä—ã: {risk.mitigation}</div>}
                          </div>
                        ))}
                      </div>
                    </div>
                  )}

                  {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                  {selectedDocument.analysis.recommendations && selectedDocument.analysis.recommendations.length > 0 && (
                    <div className="analysis-section">
                      <h5>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h5>
                      <div className="recommendations-list">
                        {selectedDocument.analysis.recommendations.map((rec, index) => (
                          <div key={index} className={`recommendation-item priority-${rec.priority || 'medium'}`}>
                            <div className="recommendation-header">
                              <span className="recommendation-category">{rec.category}</span>
                              <span className={`recommendation-priority priority-${rec.priority || 'medium'}`}>
                                {rec.priority === 'high' ? '–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' :
                                 rec.priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : '–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'}
                              </span>
                            </div>
                            <div className="recommendation-description">{rec.description}</div>
                            {rec.implementation && <div className="recommendation-implementation">üìã –ü–ª–∞–Ω: {rec.implementation}</div>}
                            {rec.deadline && <div className="recommendation-deadline">‚è∞ –°—Ä–æ–∫: {rec.deadline}</div>}
                          </div>
                        ))}
                      </div>
                    </div>
                  )}

                  {/* –≠–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –º–Ω–µ–Ω–∏–µ */}
                  {selectedDocument.analysis.expertOpinion && (
                    <div className="analysis-section">
                      <h5>üë©‚Äç‚öñÔ∏è –≠–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –º–Ω–µ–Ω–∏–µ:</h5>
                      <div className="expert-opinion">
                        <div className="expert-assessment">{selectedDocument.analysis.expertOpinion.overallAssessment}</div>
                        {selectedDocument.analysis.expertOpinion.criticalPoints && (
                          <div className="critical-points">
                            <h6>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã:</h6>
                            <ul>
                              {selectedDocument.analysis.expertOpinion.criticalPoints.map((point, index) => (
                                <li key={index}>{point}</li>
                              ))}
                            </ul>
                          </div>
                        )}
                        {selectedDocument.analysis.expertOpinion.nextSteps && (
                          <div className="next-steps">
                            <h6>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h6>
                            <ul>
                              {selectedDocument.analysis.expertOpinion.nextSteps.map((step, index) => (
                                <li key={index}>{step}</li>
                              ))}
                            </ul>
                          </div>
                        )}
                      </div>
                    </div>
                  )}
                </div>
              )}
              
            </div>
            
            <div className="document-modal__footer">
              <button 
                className="document-modal__btn document-modal__btn--secondary"
                onClick={() => handleDownloadDocument(selectedDocument)}
              >
                <FileText size={16} />
                –°–∫–∞—á–∞—Ç—å
              </button>
              <button 
                className="document-modal__btn document-modal__btn--primary"
                onClick={() => setSelectedDocument(null)}
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default MyDocuments; 