import React, { useState, useEffect, createContext } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { AuthProvider, useAuth } from './contexts/AuthContext';
import { initializeDemoUsers } from './services/userService';
import Header from './components/Header';
import Home from './pages/Home';
import Chat from './pages/Chat';
import Lawyer from './pages/Lawyer';
import WebSocketChat from './pages/WebSocketChat';

import Documents from './pages/Documents';
import About from './pages/About';
import TestPDF from './pages/TestPDF';
import Login from './components/Login';
import Registration from './components/Registration';
import AdminPanel from './components/AdminPanel';
import ProtectedRoute from './components/ProtectedRoute';
import MyDocuments from './pages/MyDocuments';
import Profile from './pages/Profile';
import FillDocuments from './pages/FillDocuments';
import './App.css';

export const LanguageContext = createContext({ lang: 'ru', setLang: () => {} });

const LANGUAGES = [
  { code: 'ru', label: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫', country: '–†–æ—Å—Å–∏—è' },
  { code: 'kk', label: '“ö–∞–∑–∞“õ—à–∞', flag: 'üá∞üáø', country: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω' },
  { code: 'be', label: '–ë–µ–ª–∞—Ä—É—Å–∫–∞—è', flag: 'üáßüáæ', country: '–ë–µ–ª–∞—Ä—É—Å—å' },
  { code: 'uk', label: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', flag: 'üá∫üá¶', country: '–£–∫—Ä–∞–∏–Ω–∞' },
  { code: 'uz', label: "O'zbekcha", flag: 'üá∫üáø', country: '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω' },
  { code: 'ky', label: '–ö—ã—Ä–≥—ã–∑—á–∞', flag: 'üá∞üá¨', country: '–ö–∏—Ä–≥–∏–∑–∏—è' },
  { code: 'az', label: 'Az…ôrbaycan dili', flag: 'üá¶üáø', country: '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω' },
  { code: 'hy', label: '’Ä’°’µ’•÷Ä’•’∂', flag: 'üá¶üá≤', country: '–ê—Ä–º–µ–Ω–∏—è' },
  { code: 'mo', label: 'Rom√¢nƒÉ', flag: 'üá≤üá©', country: '–ú–æ–ª–¥–æ–≤–∞' },
  { code: 'tg', label: '–¢–æ“∑–∏–∫”£', flag: 'üáπüáØ', country: '–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω' },
  { code: 'tk', label: 'T√ºrkmen√ße', flag: 'üáπüá≤', country: '–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω' },
  { code: 'ka', label: '·É•·Éê·É†·Éó·É£·Éö·Éò', flag: 'üá¨üá™', country: '–ì—Ä—É–∑–∏—è' },
  { code: 'zh', label: 'ÁÆÄ‰Ωì‰∏≠Êñá', flag: 'üá®üá≥', country: '–ö–∏—Ç–∞–π' },
];

// –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
const AppContent = () => {
  const { user, isLoading } = useAuth();
  const [lang, setLang] = useState(() => localStorage.getItem('lang') || 'ru');
  const [showWelcome, setShowWelcome] = useState(() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ —è–∑—ã–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω
    return !user && !localStorage.getItem('lang');
  });

  useEffect(() => {
    localStorage.setItem('lang', lang);
  }, [lang]);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    if (user) {
      setShowWelcome(false);
    }
  }, [user]);

  const handleSelectLang = (code) => {
    setLang(code);
    setShowWelcome(false);
    localStorage.setItem('lang', code);
  };

  if (isLoading) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  return (
    <LanguageContext.Provider value={{ lang, setLang }}>
      <Router future={{ v7_startTransition: true, v7_relativeSplatPath: true }}>
        <div className="App">
          {showWelcome && !user && (
            <div style={{
              position: 'fixed',
              top: 0,
              left: 0,
              width: '100vw',
              height: '100vh',
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              zIndex: 9999,
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: 'center',
              color: 'white',
            }}>
              <h1 style={{ fontSize: 36, marginBottom: 24 }}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! Welcome! “ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!</h1>
              <p style={{ fontSize: 20, marginBottom: 32 }}>–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫/Select your language:</p>
              <div className="language-selection" style={{ display: 'flex', gap: 32 }}>
                {LANGUAGES.map(l => (
                  <button
                    key={l.code}
                    onClick={() => handleSelectLang(l.code)}
                    style={{
                      fontSize: 48,
                      background: 'none',
                      border: 'none',
                      cursor: 'pointer',
                      outline: 'none',
                      display: 'flex',
                      flexDirection: 'column',
                      alignItems: 'center',
                      color: 'white',
                    }}
                  >
                    <span>{l.flag}</span>
                    <span style={{ fontSize: 18, marginTop: 8 }}>{l.label}</span>
                    <span style={{ fontSize: 14 }}>{l.country}</span>
                  </button>
                ))}
              </div>
            </div>
          )}
            <Routes>
              {/* –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã */}
              <Route path="/login" element={<Login />} />
              <Route path="/register" element={<Registration />} />
              
              {/* –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã */}
              <Route path="/" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <Home />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/chat" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <Chat />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/lawyer" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <Lawyer />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/live-chat" element={
                <ProtectedRoute>
                  <WebSocketChat />
                </ProtectedRoute>
              } />

              <Route path="/documents" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <Documents />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/fill-documents" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <FillDocuments />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/about" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <About />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/test-pdf" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <TestPDF />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/my-documents" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <MyDocuments />
                  </main>
                </ProtectedRoute>
              } />
              <Route path="/profile" element={
                <ProtectedRoute>
                  <Header />
                  <main className="main-content">
                    <Profile />
                  </main>
                </ProtectedRoute>
              } />
              
              {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã */}
              <Route path="/admin" element={
                <ProtectedRoute adminOnly={true}>
                  <AdminPanel />
                </ProtectedRoute>
              } />
            </Routes>
        </div>
      </Router>
    </LanguageContext.Provider>
  );
};

function App() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
  useEffect(() => {
    initializeDemoUsers();
  }, []);

  return (
    <AuthProvider>
      <AppContent />
    </AuthProvider>
  );
}

export default App; 